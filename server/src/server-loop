#!/bin/bash
# We're going to continuously restart the server as long as
# it exited without error. This allows /shutdown to work without
# causing the container to go into crash restart loop, which makes
# testing more efficient. If the server crashes for some reason,
# we don't want it restarting indefinitely
#
# The following is potentially a bit of a hack; we're telling
# the container (Ubuntu) to load Python packages that in our
# dev / test environment are Darwin / OS X. If there are binaries
# anywhere in site-packages, that could create problems. This
# is attempting to avoid building the requirements.txt dependencies
# into the docker image, which would result in a new image each
# time we change a package version.
export PYTHONPATH=/app/server/lib/python3.7/site-packages
SERVER_EXIT=0
while [ "$SERVER_EXIT" -eq "0" ]; do
    # Set up application environment based on NODE_ENV value
    source /app/bin/app-env
    echo "dev-server-loop: starting server..."
    python3.7 /app/server/src/server.py
    SERVER_EXIT=$?
    echo "dev-server-loop: server exited with result: ${SERVER_EXIT}!"
done
